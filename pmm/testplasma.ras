PROGRAM Tutorial3;

VAR
   a, b, c, i, j,k,val,mainloop, idx, time,c2x, c2y,ax, ay : byte;
   x,y : byte;
   charset: IncBin("test.bin","$1fff");
   fadeOut : array [8] of byte = ($00,$0d,$0b,$05,$02,$0a,$09,$0f,$04,$00,$0c,$06,$0e,$07,$08,$03 );
	fadeRedBlue : array [8] of byte = (00,$0f,$09,$0e,$02,$0c,$00,$0c,$09,$00,$02,$00,$0b,$05,$06,$0c); 
	fade : array [8] of byte = (11,6,12,12,4,14,15,1,1,1,1,15,14,4,12,12,6,11); 
	
	shiftx: byte;

   siny : array[25] of byte; 
   sinx : array[40] of byte; 

@define hallaballa "ehm"
@define y_start "#5"
//@define include_color  true


procedure Plasma();
begin

	c2x:=ax;
	c2y:=ay;
	
	shiftx:=shiftx+#25;

	for x:=#0 to #25 do begin 
		siny[x]:=  sine[c2x] + sine[c2y] + shiftx;
		c2x:=c2x+#4;
		c2y:=c2y+#9;
	end;

	ax:=ax+#3;
	ay:=ay-#5;

		


	for x:=#0 to #40 do begin 
		sinx[x] := sine[c2x] + sine[c2y];
		c2x:=c2x+#3;
		c2y:=c2y+#7;

	end;
	moveto(#1,@y_start, #$04);
	
	for y:=@y_start to #23 do begin
		val:=siny[y];
		for x:=#1 to #36 do begin
			screenmemory[x] := (sinx[x] +val)/#8 + #64;

		end;
		incscreenx(#40);
	end;

@ifdef include_color	

	moveto(#1,@y_start, #$D8);

	for y:=@y_start to #23 do begin
		val:=siny[y];
		for x:=#1 to #36 do begin
			c:=fade[ (sinx[x] +val)/#16 ];
			pokescreen(c, x);
			//pokescreen(y, x);

		end;
		incscreenx(#40);
	end;

@endif
		
	

end;








begin
	poke(SCREEN_BG_COL, #0, a);
	poke(SCREEN_BG_COL, #1, BLACK);
	poke(VIC_DATA_LOC, #0, #$18);
    //poke($C202, #0,#13);


	ax:=#1;
	ay:=#5;


	ax := #1;

	ClearScreen(#$20, SCREEN_CHAR_LOC);

	while #1<>#2 do begin
		time:=time+#1;
		waitForRaster(#128);
		Plasma();
	end;


END.
