PROGRAM FirstC64;
VAR
	a,b, c, i, j,k,val,mainloop, time : byte;
	x,y : byte;
	sprite0data: IncBin("data/sprite1.bin");
	fadeOut : array [8] of byte = ($00,$0d,$0b,$05,$02,$0a,$09,$0f,$04,$00,$0c,$06,$0e,$07,$08,$03 );
	fadeRedBlue : array [8] of byte = (00,$0f,$09,$0e,$02,$0c,$00,$0c,$09,$00,$02,$00,$0b,$05,$06,$0c); 
	fade : array [8] of byte = (00,11,6,12,4,14,15,1,1,15,14,4,12,6,11,00,11,6,12,4,14,15,1,1,15,14,4,12,6,11,00,00); 
	sidmusic1: IncSid("music2.sid");
	charset: IncBin("test.bin","$27FF");
	bar_0, colorIndex, colorAdd, colorSize : byte;

	message: array[255] of byte;
  

	sprite_x : integer;
	sprite_y : byte;

	stars_x : array[100] of byte;	
	stars_y : array[100] of byte;	
	stars_dy : array[100] of byte;	
	stars_col : array[100] of byte;	

	clearval : byte;
	scroll_x : byte;



procedure InitializeSprites();

begin
	Asm("	ldx #0");
	sprite_x:=#160;
	sprite_y:=#180;
    poke(SPRITE_DATA_LOC,#0, #$0D); 
	poke(SPRITE_DATA_LOC,#1, #$0D);
    poke(SPRITE_BITMASK,#0, #%00011111);
	poke(SPRITE_COLOR,#0, WHITE);
    poke(SPRITE_COLOR,#1, YELLOW);
    memcpy(sprite0data, #0, $0340, #63);

end;

procedure SoundTest(wave_type:byte);
begin
	
 //Volume, hi byte freq, attack voice 1, sustain=16* + release, waveform, release waveform 

//
//
	PlaySound(SID_CHANNEL1, #15, #10, #0*#16+#0, #15*#16 + #6, #1 +wave_type, wave_type);

 end;


procedure PrintText(); 
begin
//	MoveTo(#10, #24, #$04);
//	printstring(message, #0);
	MoveTo(#17, #24, #$04);
	printnumber(joystickbutton);

end;

procedure MoveSprite();
begin
	spritepos(sprite_x, sprite_y, #0, #$01, #$FE);
	Joystick();

    asm("   ldx #0 ; bug add");
	sprite_x := sprite_x - joystickleft*#4;
	sprite_x := sprite_x + joystickright*#4;
	sprite_y := sprite_y + joystickdown*#4;
	sprite_y := sprite_y - joystickup*#4;
	
	//scroll_x:= joystickvalue[#1];
	//scroll_x:= scroll_x- joystickvalue[#2];

	if joystickup=#1 then begin
		SoundTest(#32);
	end;


end;

procedure Clear();
begin
	ClearScreen(#$20, SCREEN_CHAR_LOC);
	ClearScreen(GREEN, SCREEN_COL_LOC);
end;





procedure InitStars();
begin
   for i:=#0 to #50 do begin
	 rand(#1,#39,x);
	 rand(#1,#160,y);
	 rand(#0,#6,val);
	 rand(#1,#4,c);
	 stars_x[i]:=x;
	 stars_y[i]:=y;
	 stars_col[i]:=val;
	 stars_dy[i]:=c;
   end
end;


procedure UpdateStars();
begin
	for i:=#0 to #40 do begin

		if stars_y[i]>#22*#8 then begin
			stars_y[i]:=#1;
		end;
		stars_y[i]:=stars_y[i] + stars_dy[i];

		y:=stars_y[i];
		x:=y;
		y:=y/#8;
		and(x,#$7);
		x:=x+#34;


		moveto(stars_x[i], y, #$04);
		pokescreen(clearval,#0);
		incscreenx(#40);
		pokescreen(x,#0);
		moveto(stars_x[i], y+#1, #$D8);
		pokescreen(stars_col[i],#0);

	end;
	fill($0400 + #40*#23, clearval, #40);
end;



procedure Update();
begin
	Poke(SCREEN_BG_COL, #0, BLACK);
	Poke(SCREEN_FG_COL, #0, BLACK);

	UpdateStars();
	PrintText();
	MoveSprite();
	Call(SIDFILE_1_PLAY);

	//kernelInterrupt();


end;

interrupt UpdateRaster();
begin
	Update();

	time:=time+#1;
	colorSize:=#4;
	bar_0 := sine[time*#2]/#4 + #70;
	colorAdd:=time /#4;
	And(colorAdd, #15);
	colorIndex :=#0;

	kernelInterrupt();

end;


begin
	
	InitSid(SIDFILE_1_INIT);

	poke(SCREEN_BG_COL, #0, BLACK);
	poke(SCREEN_FG_COL, #1, BLACK);
	poke($d018, #0, #$1A);
/*
$D018 = %xxxx000x -> charmem is at $0000
$D018 = %xxxx001x -> charmem is at $0800
$D018 = %xxxx010x -> charmem is at $1000
$D018 = %xxxx011x -> charmem is at $1800
$D018 = %xxxx100x -> charmem is at $2000
$D018 = %xxxx101x -> charmem is at $2800
$D018 = %xxxx110x -> charmem is at $3000
$D018 = %xxxx111x -> charmem is at $3800
*/

    //poke($C202, #0,#13);
	clearval := #$20;
	Clear();
	mainloop:=#1;
	time:=#0;

	
	scroll_x:=#0;

	
	InitializeSprites();
	InitStars();
	DisableInterrupts();
	RasterIRQ(UpdateRaster(), #0);
	EnableInterrupts();

	Loop();


END.
