PROGRAM FirstC64;
VAR
   a,b, c, i, j,k,val,mainloop, time : byte;
   x,y : byte;
   sprite0data: IncBin("sprite1.bin");
   charset: IncBin("test.bin","$1fff");
   fadeOut : array [8] of byte = ($00,$0d,$0b,$05,$02,$0a,$09,$0f,$04,$00,$0c,$06,$0e,$07,$08,$03 );
	fadeRedBlue : array [8] of byte = (00,$0f,$09,$0e,$02,$0c,$00,$0c,$09,$00,$02,$00,$0b,$05,$06,$0c); 
	fade : array [8] of byte = (00,11,6,12,4,14,15,1,1,15,14,4,12,6,11,00); 


   message: array[255] of byte;
  
   sprite_x : integer;
   sprite_y : integer;

   stars_x : array[100] of byte;	
   stars_y : array[100] of byte;	
   stars_dy : array[100] of byte;	
   stars_col : array[100] of byte;	

   clearval : byte;
   scroll_x : byte;

{ $include suppe2.inc }


procedure SoundTest(wave_type:byte);
begin
	
 //Volume, hi byte freq, attack voice 1, sustain=16* + release, waveform, release waveform 

//
//
	PlaySound(#15, #10, #0*#16+#0, #15*#16 + #6, #1 +wave_type, wave_type);

 end;



procedure PrintText(); 
begin
	MoveTo(#10, #24, #$04);
	printstring(message, #0);
	MoveTo(#17, #24, #$04);
	printnumber(time);

end;

procedure MoveSprite();
begin
	spritepos(sprite_x, sprite_y, #0, #$01, #$FE);
	Joystick();

	sprite_x := sprite_x - joystickvalue[#1]*#4;
	sprite_x := sprite_x + joystickvalue[#2]*#4;
	sprite_y := sprite_y + joystickvalue[#3]*#4;
	
	scroll_x:= joystickvalue[#1];
	scroll_x:= scroll_x- joystickvalue[#2];

	if joystickvalue[#4]=#1 then begin
		SoundTest(#32);
	end;


end;

procedure Clear();
begin
	fill($D800, BLUE,#0);
	fill($D900, BLUE,#0);
	fill($DA00, BLUE,#0);
	fill($DB00, BLUE,#0);
	fill($0400, clearval,#0);
	fill($0500, clearval,#0);
	fill($0600, clearval,#0);
	fill($0700, clearval,#0);

end;

procedure WaitRaster();
begin
	while val<>#199 do begin
		peek(RASTERLINE_POS, #0, val);
	end;
/*	while a<>#199 do begin
		peek(RASTERLINE_POS, #0, a);
	end;*/

end;




procedure InitStars();
begin
   for i:=#0 to #100 do begin
	 rand(#0,#40,x);
	 rand(#0,#200,y);
	 rand(#0,#4,val);
	 rand(#1,#4,c);
	 stars_x[i]:=x;
	 stars_y[i]:=y;
	 stars_col[i]:=val;
	 stars_dy[i]:=c;
   end
end;


procedure UpdateStars();
begin
	for i:=#0 to #50 do begin
		y:=stars_y[i];
		y:=y/#8;
		moveto(stars_x[i], y, #$04);
		pokescreen(clearval, #0);
		stars_y[i]:=stars_y[i] + stars_dy[i];
		if stars_y[i]>#150 then begin
			stars_y[i]:=#0;
			rand(#0,#40,val);
			stars_x[i] := val;
		end;

	/*	stars_x[i]:=stars_x[i]+scroll_x;
		if stars_x[i]=#40 then begin
			stars_x[i]:=#0;
		end;
		if stars_x[i]=#255 then begin
			stars_x[i]:=#39;
		end;
*/

		y:=stars_y[i];
		x:=y;
		and(x,#$7);
		x:=x+#34;
		y:=y/#8;
		moveto(stars_x[i], y, #$04);
		pokescreencolor(x,stars_col[i],#0,#1);


	end;
end;

begin
	poke(SCREEN_BACKGROUND_COLOR, #0, BLACK);
	poke(SCREEN_BACKGROUND_COLOR, #1, BLACK);
	poke($d018, #0, #$18);
    poke($C202, #0,#13);
	clearval := #$20;
	Clear();
	mainloop:=#1;
	time:=#0;

	asm("
	cli
	");



	scroll_x:=#0;

	InitializeSprites();
	InitStars();
	while mainloop<#10 do begin
		time:=time+#1;
		UpdateStars();
		PrintText();
		MoveSprite();
		WaitRaster();

	end;
END.
