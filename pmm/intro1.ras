program Tutorial14_fire;

var
	c,val,time,i, scroll,scrollsplit,val2,drawVal,k,curFld : byte = 0;
	x,y : byte = 0;
	// Use custom charset
	charset: IncBin("charsets/intro.bin","$2800");
	sprites: IncBin("sprites/introsprite.bin","$3000");
//	hfbin: IncBin("levels/hf2.bin", "$2800");
	charset2: IncBin("charsets/roadrunner.bin","$6000");
	music: IncSid("music/uctumi1_68.sid","2");// Begynner p? 3800
	color : array [8] of byte = (9, 2,2,8,8, 10,10, 7,7,1, 1,1,1); 
	shiftx: byte;
	coldiv, curx: byte = 24;
	sindiv : byte = 8;
	background: byte = 0;
	
	fade : array [8] of byte = (11,6,12,12,4,14,15,1,1,1,1,15,14,4,12,12,6,11); 

	textColor : array[8] of byte = (0, 0,6, 11, 12, 2, 3, 14,1,  1,14,3,2,12,11,6,00,0);

	//fireText: string="                                                                	";
	fireText: string="WE  ARE HKT FRC YOU ARE NOT HKT FRC ";
	fireText2: string="DO  NOT BE  US  GO  WAY NOW PLZ ";
	fireText3: string="TIS TXT NOT QL  SO  GO  LVE GO  WAY NOR WAY ";
	endd: byte = 255;
	
	curcol: byte = 0;
	curTextCol: byte = 0;

	text: string="   HOKUTO FORCE EVIL FORCE RABID FONT ROADRUNNER STOLEN THIS INTRO IS NOT MADE BY HOKUTO FORCE BUT BY ELSE PLEASE NO ASK NOT LEUAT PUSHEAD PUS HEAD";

	rands : array[256] of byte;

	firecounter: byte = 10;


	spritex: array[8] of byte;
	spritey: array[8] of byte;


@define useKernal "0"


@define startx "8"
@define endx "32"



@define starty "8"
@define start2 "12"
@define star3 "16"
@define endy "21"



@define genCharmap "$8000"


@define textpointer zeropage4
@define firetextpointer zeropage5


@define userJammer true




procedure InnerFire();
begin
	for x:=@startx to @endx onpage do 
		begin
			asm("
				ldy x

				tya
				adc #38
				tay
				lda (screenmemory),y
				iny
				adc (screenmemory),y
				iny
				adc (screenmemory),y
				pha
				tya
				adc #39
				tay
				pla
				adc (screenmemory),y
				
				lsr
				lsr

				tax
				ldy x
				lda color,x
				sta (zeropage1),y
				txa
				

				bne cont
				lda #1
cont:
				adc #63
				sta (screenmemory),y		
			");			
		end;
		incscreenx(40);
		inczp(zeropage1,40);
			

end;

procedure WriteText(wtx, wty, wtadd:byte);
begin
	c:=0;
	if zeropage5[2]=$20 then c:=4;
	for i:=0 to 3 do begin
		moveto(wtx + i *8 + c,wty,wtadd);
		zeropage1:=@genCharmap;
		val:=zeropage5[i];
		if val<>$20 then begin
			val:=val-65;
			if (val<>0) then
			for k:=0 to val do inczp(zeropage1, 64);
			for y:=0 to 8 do begin
				for x:=0 to 8 do begin
					k:=zeropage1[x];
					if k<>$20 then
					screenmemory[x]:=k;
				end;	
				inczp(screenmemory, 40);
				inczp(zeropage1, 8);
			end;

		end;


	end;

end;



procedure FireLower();
begin
	shiftx:=shiftx+31;
	moveto(0, @star3, $04);
	zeropage1:=$D800 + 40*@star3;
	for y:=@star3 to @endy do
		InnerFire();


end;

procedure FireMiddle();
begin


	shiftx:=shiftx+31;
	moveto(0, @start2, $04);
	zeropage1:=$D800 + 40*@start2;
	for y:=@start2 to @star3 do
		InnerFire();

	zeropage1:=rands;
	inczp(zeropage1,shiftx);
	memcpy(zeropage1,0, ^$0400+40*@endy + @startx,@endx-@startx);


end;


procedure FireUpper();
begin


	shiftx:=shiftx+31;
	if (shiftx>129) then shiftx:=shiftx-128;
	screenmemory:=$0400 + @starty*40;
	zeropage1:=$D800 + 40*@starty;
	

	drawVal:=sine[time*4]/coldiv + 2;
	

	for y:=@starty to @start2 do 
		InnerFire();		
end;


procedure InitRandom();
begin
	for i:=0 to 0 do begin
		rand(0,255,val);
		rands[i]:=val/20+64;
	end;

end;





interrupt Raster1();

procedure UpdateSprites();



interrupt ScrollerEnds();
var 
	fireTest:byte = 0;
begin
//	scrollx(0);
//	scrolly(0);
	StartIRQ(@useKernal);
	asm(" 
		ldx #14
		dex
		bne *-1
	");
	SCREEN_FG_COL:=BLACK;
	SCREEN_BG_COL:=BLACK;
	setbank(VIC_BANK0);
	VIC_DATA_LOC := $1A;
	// Copy scroller
	val:=0-time*4;
	curFld:=sine[val]/8;
	inc(curFld);
	FLD(curFld);
	scrolly(0);
	scrollx(0);
	//scrolly(0);
	if scroll=7 then begin
		memcpy($4400 + 40*3,1,^$4400 + 40*3,39);
		memcpy($4400 + 40*2,1,^$4400 + 40*2,39);
	end;
	

//	fireTest := 3; // do nuthin
	if fireTest=0 then
		FireUpper();
	if fireTest=1 then
		FireMiddle();
	if fireTest=2 then
		FireLower();
	if fireTest=3 then begin
		inc(firecounter);
		if (firecounter=13) then begin
			WriteText(8,13,$04);
			inczp(@firetextpointer,4);
			firecounter := 0;
			if (@firetextpointer[0]=0) then inczp(@firetextpointer,1); 
			if (@firetextpointer[0]=255) then @firetextpointer:=fireText;
		end;
	end;
	call(SIDFILE_1_PLAY);
	//UpdateSprites();
	

	inc(fireTest);
	if fireTest=4 then begin
		fireTest := 0;
	end;

	RasterIRQ(Raster1(),60,@useKernal);
	CloseIRQ();


end;


interrupt ScrollerStart();
begin
	StartIRQ(@useKernal);
//	scrolly(7);	
	curFld:=sine[time*4]/sindiv+1;

	//curFld := 0;
	FLD(curFld);
	/*asm(" 
		ldx #3
		dex
		bne *-1
	");*/
	SCREEN_BG_COL:=curcol;
	//SCREEN_FG_COL:=BLUE;
	hideborderx(0);
	setbank(VIC_BANK1);
	VIC_DATA_LOC := $18;
	scrollx(scroll);

	inc(time);
	dec(scroll);
	moveto(0, 2, $44);
	if scroll>127 then begin
		val:=@textpointer[0];
		val2:=val;
		if val<>$20 then begin
			val:=val-64;
			if val>16 then val:=val+16; 
			val:=val*2+64;
		
			val:=val + scrollsplit;
			val2:=val+32;
		end;
		screenmemory[39]:=val;
		screenmemory[39+40]:=val2;

		scroll:=7;
		inc(scrollsplit);
	end;
	if scrollsplit=2 then begin
		scrollsplit:=0;
		inczp(@textpointer,1);
	end;
	val:=150 + sine[time]/8;
	poke(^$D001,0,val);
	poke(^$D001,2,val);
	poke(^$D001,4,val);
	val:=val+21;
	poke(^$D001,6,val);
	poke(^$D001,8,val);
	poke(^$D001,10,val);
	
	RasterIRQ(ScrollerEnds(),88+curFld,@useKernal);
@ifdef useJammer
	Jammer(88+curFld, RED);
@endif
	CloseIRQ();

end;
procedure UpdateSprites();
var
	sx: integer;
begin
	for i:=0 to 6 do begin
	//i:=scroll;
	sx:=spritex[i]*2;
	spritepos(sx, spritey[i], i);

	spritey[i]:=160 + sine[time +i*16]/8;

	end;
end;


interrupt Raster1();
begin


	StartIRQ(@useKernal);

	RasterIRQ(ScrollerStart(),64,@useKernal);
//	hidebordery(0);
	scrolly(7);


	curTextCol:=sine[time*4]/32;
	//curTextCol:=sine[time]/32;

	SPRITE_MULTICOLOR_REG1:=textColor[ curTextCol+1 ];
 	SPRITE_MULTICOLOR_REG2:=textColor[ curTextCol];


//	SCREEN_BG_COL:=RED;

	curcol:=RED;//color2[val&15];
@ifdef useJammer
	Jammer(64, GREY);
@endif
	CloseIRQ();
end;


procedure CreateCharmap();
begin
	zeropage1:=charset;
	inczp(zeropage1,8);
	zeropage2:=@genCharmap;

	for i:=0 to 32 do begin
		for y:=0 to 8 do begin
			val:=zeropage1[y];
			for x:=0 to 8 do begin
				val2 := getbit(val,7-x);
				if val2=0 
					then c:=$20 // blank
				else 
					c:=79;
				zeropage2[x]:=c;
			end;
			inczp(zeropage2,8);
		end;
		inczp(zeropage1,8);
	end;
	


end;




procedure InitSprites();
begin
	val:=0;
	val2:=0;
	k:=$C0;
	for i:=0 to 6 do begin
		setspriteloc(i, k,0);
		spritex[i]:=val2 + 130;
		spritey[i]:=170+val;
		val2:=val2+12;
		inc(k);
		if (i=2) then begin
			val:=21;
			val2:=0;
			k:=$C0+13;
		end;
		
	end;
	SPRITE_BITMASK:=%00111111;
	for i:=0 to 6 do 
		SPRITE_COLOR[i]:=RED;

	poke(SPRITE_MULTICOLOR_REG1, 0, BLACK);
	poke(SPRITE_MULTICOLOR_REG2, 0, BLACK);
	SPRITE_MULTICOLOR:=$FF;


end;



begin
	InitRandom();
//	HideborderY(0);
	background:=BLACK;
	// Set color background
	SCREEN_BG_COL:=background;
	SCREEN_FG_COL:=background;
	// Set charmap location at $2000
	VIC_DATA_LOC := $1A;
	// Clear screen and color memory
	ClearScreen(64, SCREEN_CHAR_LOC);
	ClearScreen($20, ^$4400);
	ClearScreen(64, ^$04A0);

	ClearScreen(YELLOW, SCREEN_COL_LOC);

	//setmemoryconfig(1,1,0);
	//SetMemoryConfig(1,0,0);
	copycharsetfromrom(charset);
	SetMemoryConfig(1,@useKernal,0);
	CreateCharmap();
	@textpointer:=text;
	initsid(SIDFILE_1_INIT);
	@firetextpointer:=fireText;
	sindiv := 8;

	InitSprites();
	UpdateSprites();

	//moveto(10,1,$04);
	//printstring("HOKUTO FORCE",0,40);

	DisableCIAInterrupts();
	RasterIRQ(Raster1(),50,@useKernal);
	EnableRasterIRQ();
	enableirq();
	Loop();
end.
