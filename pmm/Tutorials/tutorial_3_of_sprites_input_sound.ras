PROGRAM tutorial4;
VAR
	a,b, c, i, j,k,val,mainloop, time : byte;
	x,y : byte;
	sprite0data: IncBin("data/sprite_blob.bin");

	sprite_time : integer;

	sprite_x : integer;
	sprite_y : integer;

	bullet_x : integer;
	bullet_y : integer;




procedure InitializeSprites();
begin
	Asm("	ldx #0");
	sprite_x:=#160;
	sprite_y:=#180;

	Asm("	ldx #0");
	bullet_x:=#400;
	bullet_y:=#180;

	
	setSpriteLoc(#0, #$0D);
	setSpriteLoc(#1, #$0E);

    poke(SPRITE_BITMASK,#0, #%00000011);
	poke(SPRITE_COLOR,#0, YELLOW);
	poke(SPRITE_COLOR,#1, GREEN);

    memcpy(sprite0data, #0, SPRITE_LOC1, #63);
    memcpy(sprite0data, #128, SPRITE_LOC2, #63);
end;

procedure MoveSoundEffect(freq_move:byte);
begin
	 //Volume, hi byte freq, attack voice 1, sustain=16* + release, waveform, release waveform 
	PlaySound(SID_CHANNEL1, 
	#7,  // Volume
	freq_move,  // Hi byte frequency 
	#0*#16+#0,  // Attack voice 1
	#3*#16 + #3,   // Sustain = 16*15 + release=6
	#1 +SID_NOISE,  // Waveform
	SID_NOISE);  // waveform

 end;

procedure ShootSoundEffect(wave_type, freq:byte);
begin
	 //Volume, hi byte freq, attack voice 1, sustain=16* + release, waveform, release waveform 
	PlaySound(SID_CHANNEL2, 
	#15,  // Volume
	freq,  // Hi byte frequency 
	#0*#16+#0,  // Attack voice 1
	#15*#16 + #6,   // Sustain = 16*15 + release=6
	#1 +wave_type,  // Waveform
	wave_type);  // waveform

end;

procedure PrintText(); 
begin
	MoveTo(#17, #24, #$04);
	printnumber(time);
end;


procedure MoveBullet();
begin
	spritepos(bullet_x, bullet_y, #2, #$02, #$FD);
	bullet_x:=bullet_x+#1;	
end;


procedure MoveSprite();
begin
	spritepos(sprite_x, sprite_y, #0, #$01, #$FE);
	Joystick();

	sprite_x := sprite_x - joystickvalue[#1]*#2;
	sprite_x := sprite_x + joystickvalue[#2]*#2;
	sprite_y := sprite_y + joystickvalue[#3]*#2;

	rand(#15, #45, x);
	if joystickvalue[#1]<>#0 then begin
		MoveSoundEffect(x);
	end;
	if joystickvalue[#2]<>#0 then begin
		MoveSoundEffect(x);
	end;
	if joystickvalue[#3]<>#0 then begin
		MoveSoundEffect(x);
	end;

	asm(";feil");
	if joystickvalue[#4]=#1 then begin
		ShootSoundEffect(SID_SAW, #15);
		bullet_x:=sprite_x;
		bullet_y:=sprite_y;
		
	end;
end;


procedure UpdateSprite();
begin
	sprite_time := sprite_time +#1;
	if sprite_time>#20 then begin
		sprite_time:=#0;
	end;
	if sprite_time=#10 then begin
		memcpy(sprite0data, #0, SPRITE_LOC1, #63);
	end;
	if sprite_time=#0 then begin
		memcpy(sprite0data, #64, SPRITE_LOC1, #63);
	end;
end;



begin
	poke(SCREEN_BG_COL, #0, RED);
	poke(SCREEN_FG_COL, #0, BLACK);
	ClearScreen(#$20, SCREEN_CHAR_LOC);


	mainloop:=#1;
	time:=#0;
	sprite_time := #0;

	InitializeSprites();

	While mainloop<#10 do begin
		time:=time+#1;
		UpdateSprite();	
		PrintText();
		
		MoveSprite();
		MoveBullet();
		WaitForRaster(#0);
	end;

END.